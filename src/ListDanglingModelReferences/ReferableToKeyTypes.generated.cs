/*
 * This code has been automatically generated by aas_core3_0_sk_codegen.
 * Do NOT edit or append.
 */

using Aas = AasCore.Aas3_0; // renamed

namespace ListDanglingModelReferences {
    public static class ReferableToKeyTypes
    {
        public static Aas.KeyTypes Map(
            Aas.IReferable that
        )
        {
            // NOTE (mristin, 2023-04-05):
            // We can not use type-switch here as there are concrete referable classes which inherit
            // from other concrete referable classes, so the order of the checks does matter.

            if (that is Aas.ISubmodelElementList)
            {
                return Aas.KeyTypes.SubmodelElementList;
            }

            if (that is Aas.ISubmodelElementCollection)
            {
                return Aas.KeyTypes.SubmodelElementCollection;
            }

            if (that is Aas.ISubmodel)
            {
                return Aas.KeyTypes.Submodel;
            }

            if (that is Aas.IReferenceElement)
            {
                return Aas.KeyTypes.ReferenceElement;
            }

            if (that is Aas.IRange)
            {
                return Aas.KeyTypes.Range;
            }

            if (that is Aas.IProperty)
            {
                return Aas.KeyTypes.Property;
            }

            if (that is Aas.IOperation)
            {
                return Aas.KeyTypes.Operation;
            }

            if (that is Aas.IMultiLanguageProperty)
            {
                return Aas.KeyTypes.MultiLanguageProperty;
            }

            if (that is Aas.IFile)
            {
                return Aas.KeyTypes.File;
            }

            if (that is Aas.IEntity)
            {
                return Aas.KeyTypes.Entity;
            }

            if (that is Aas.IConceptDescription)
            {
                return Aas.KeyTypes.ConceptDescription;
            }

            if (that is Aas.ICapability)
            {
                return Aas.KeyTypes.Capability;
            }

            if (that is Aas.IBlob)
            {
                return Aas.KeyTypes.Blob;
            }

            if (that is Aas.IBasicEventElement)
            {
                return Aas.KeyTypes.BasicEventElement;
            }

            if (that is Aas.IAssetAdministrationShell)
            {
                return Aas.KeyTypes.AssetAdministrationShell;
            }

            if (that is Aas.IAnnotatedRelationshipElement)
            {
                return Aas.KeyTypes.AnnotatedRelationshipElement;
            }

            if (that is Aas.IRelationshipElement)
            {
                return Aas.KeyTypes.RelationshipElement;
            }

            throw new System.InvalidOperationException(
                $"Unexpected type: {that.GetType()}"
            );
        }
    } 
}

/*
 * This code has been automatically generated by aas_core3_0_sk_codegen.
 * Do NOT edit or append.
 */
